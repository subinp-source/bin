# ---------------------------------------------------------------------------
# Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
# ---------------------------------------------------------------------------
# you can put key/value pairs here.
# Use Config.getParameter(..) to retrieve the values during runtime.

Hybriswebservices.key=value

# Specifies the location of the spring context file putted automatically to the global platform application context.
Hybriswebservices.application-context=Hybriswebservices-spring.xml

# Enables / disables XSS filter (overrides global settings)
#Hybriswebservices.xss.filter.enabled=false

#Fallback taxcode is returned by DefaultTaxCodeStrategy when it cannot find taxCode for product and taxArea
#Different value can be configure for different base store by adding base store name at the end of property name
externaltax.fallbacktaxcode=PC040100

# For each flow, multiple scopes are supported. Delimiter is ',' e.g. basic,extended
Hybriswebservices.oauth2.password.scope=basic
Hybriswebservices.oauth2.clientCredentials.scope=extended
Hybriswebservices.oauth2.tokenUrl=/authorizationserver/oauth/token

#Logger level set to warn to avoid information about mapping during server start (they could contain Exception string in method signature)
log4j2.logger.commerceHandlerMapping.name = de.hybris.training.request.mapping.handler.CommerceHandlerMapping
log4j2.logger.commerceHandlerMapping.level = warn
log4j2.logger.commerceHandlerMapping.appenderRef.stdout.ref = STDOUT

# <v1-api>

Hybriswebservices.v1.description=Commerce Webservices Version 1
Hybriswebservices.v1.title=Commerce Webservices V1
Hybriswebservices.v1.version=1.0

# </v1-api>

Hybriswebservices.v2.description=These services manage all of the common commerce functionality, and also include customizations from installed AddOns. The implementing extension is called Hybriswebservices.
Hybriswebservices.v2.title=Commerce Webservices
Hybriswebservices.v2.version=2.0
Hybriswebservices.v2.license=Use of this file is subject to the terms of your agreement with SAP SE or its affiliates respecting the use of the SAP product for which this file relates.
Hybriswebservices.v2.license.url=

Hybriswebservices.sap.apiType=REST
Hybriswebservices.sap.shortText=Enables you to manage all of the common commerce functionality.
Hybriswebservices.sap.state=Active
Hybriswebservices.sap.servers=default
Hybriswebservices.sap.server.default.url=https://{url}/rest/v2
Hybriswebservices.sap.server.default.description=Commerce Webservices v2 REST API endpoint
Hybriswebservices.sap.server.default.templates.url.description=SAP Commerce Cloud server URL where the application is deployed.
Hybriswebservices.sap.securityNames=oauth2_Password,oauth2_client_credentials
Hybriswebservices.sap.security.oauth2_Password.scopes=basic
Hybriswebservices.sap.security.oauth2_client_credentials.scopes=extended

#Use for generating static swagger documentation
Hybriswebservices.documentation.static.generate=true
ext.Hybriswebservices.extension.webmodule.webroot=/rest/v2

#################################
### Jar scanning setup for Tomcat
#################################
Hybriswebservices.tomcat.tld.scan=*jstl-1*.jar
Hybriswebservices.tomcat.tld.default.scan.enabled=false
Hybriswebservices.tomcat.pluggability.scan=*jstl-1*.jar
Hybriswebservices.tomcat.pluggability.default.scan.enabled=false

corsfilter.Hybriswebservices.allowedOrigins=http://localhost:4200 https://localhost:4200
corsfilter.Hybriswebservices.allowedMethods=GET HEAD OPTIONS PATCH PUT POST DELETE
corsfilter.Hybriswebservices.allowedHeaders=origin content-type accept authorization cache-control if-none-match x-anonymous-consents

# Use to set if the cart should be refreshed by default or not
Hybriswebservices.cart.refreshed.by.default=false

#Used for specifying compatible site channels for annotated api endpoints restricted by site channel
api.compatibility.b2c.channels=B2C

#Web root for commerce web services - used in CommerceWebServicesPaymentFacade for creating full SOP merchant callback url
webroot.commercewebservices.http=http://localhost:9001/rest
webroot.commercewebservices.https=https://localhost:9002/rest

# Used to specify the list of API endpoint identifiers that must be disabled (example: getCatalogs,getBaseSites)
# The endpoint identifier is represented by the "nickname" attribute of the ApiOperation annotation used on an endpoint method
#Hybriswebservices.api.restrictions.disabled.endpoints=
