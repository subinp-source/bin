/*
 * [y] hybris Platform
 *
 * Copyright (c) 2000-2016 hybris AG
 * All rights reserved.
 *
 * This software is the confidential and proprietary information of hybris
 * ("Confidential Information"). You shall not disclose such Confidential
 * Information and shall use it only in accordance with the terms of the
 * license agreement you entered into with hybris.
 *
 */
package $packageName;

#foreach($i in $imports)
import $i;
#end
#if ( ! $imports.isEmpty() )

#end
import java.util.Objects;

#if ( $hasDescription || $hasDeprecated )
/**
#end
#if ( $hasDescription)
 * $description
#end
#if ( $hasDescription && $hasDeprecated )
 *
#end
#if ( $hasDeprecated )
 * @deprecated $deprecated
#end
#if ( $hasDescription || $hasDeprecated )
 */
#end
#if ( $hasDeprecated )
@Deprecated
#end
public class $shortClassName #if($superclassName)extends $superclassName #else implements java.io.Serializable #end

{

	#foreach($v in $memberVariables)
$v.comment
	private $v.type $v.name;
	#end
	
	public ${constructorName}()
	{
		// default constructor
	}
	
	#foreach($v in $memberVariables)
#if ($v.overridden)@Override #end
	
	public void set${StringUtils.capitalize($v.name)}(final ${v.type} ${v.name})
	{
		this.${v.name} = ${v.name};
	}
	
#if ($v.overridden)	@Override #end
	#if ($v.type == 'boolean')	
	
	public $v.type is${StringUtils.capitalize($v.name)}() 
	{
		return $v.name;
	}
	#else
	
	public $v.type get${StringUtils.capitalize($v.name)}() 
	{
		return $v.name;
	}
	#end
	
	#end


	#if ($hasEqualsProperties)
	@Override
	public boolean equals(final Object o)
	{
		#if ($superEquals)
		boolean superEquals = super.equals(o);
		if( !superEquals ) return false;
		#end

	if (o == null) return false;
	if (o == this) return true;

	if (getClass() != o.getClass()) return false;

	final $shortClassName other = ($shortClassName) o;
	return	#foreach($v in $equalsProperties)
#if ($v.type == 'boolean')
Objects.equals(is${StringUtils.capitalize($v.name)}(), other.is${StringUtils.capitalize($v.name)}())
#else
Objects.equals(get${StringUtils.capitalize($v.name)}(), other.get${StringUtils.capitalize($v.name)}())
#end
#if( $foreach.hasNext ) && #end #end ;
	}

	@Override
	public int hashCode()
	{
		int result = 1;
		Object attribute;

		#foreach($v in $equalsProperties)
		attribute = $v.name;
		result = 31 * result + (attribute == null ? 0 : attribute.hashCode());
		#end

		return result;
	}
	#end
}