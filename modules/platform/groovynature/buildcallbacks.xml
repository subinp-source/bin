<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
 Copyright (c) 2020 SAP SE or an SAP affiliate company. All rights reserved.
-->
<project name="groovynature_buildcallbacks">
    <property name="groovy.lib.dir" location="${ext.core.path}/lib"/>

	<taskdef name="groovyc" classname="org.codehaus.groovy.ant.Groovyc" classpath="${groovy.lib.dir}/groovy-ant-2.5.5.jar;${groovy.lib.dir}/groovy-2.5.5.jar" />

	<macrodef name="groovy_compile">
		<element name="additionalclasspath" optional="true" />
		<attribute name="memoryMaximumSize" default="64m" />
		<attribute name="destdir" />
		<attribute name="srcdir" />
		<attribute name="extname"/>
		<sequential>
            <if>
                <isset property="groovyc.fork"/>
                <then>
                    <property name="fork" value="${groovyc.fork}" />
                </then>
                <elseif>
                    <os family="windows" />
                    <then>
                        <property name="fork" value="false" />
                    </then>
                </elseif>
                <else>
                    <property name="fork" value="true" />
                </else>
            </if>
			<mkdir dir="@{destdir}"/>
			<groovyc srcdir="@{srcdir}" fork="${fork}" destdir="@{destdir}" includeAntRuntime="true" verbose="${build.verbose}" encoding="${build.encoding}">
				<classpath>
					<additionalclasspath />
					<fileset dir="${ext.@{extname}.path}">
						<include name="${ext.@{extname}.additional.src.dir}/**/*.class"/>
						<include name="${ext.@{extname}.additional.testsrc.dir}/**/*.class"/>
						<include name="${ext.@{extname}.additional.websrc.dir}/**/*.class"/>
						<include name="${ext.@{extname}.additional.webtestsrc.dir}/**/*.class"/>
					</fileset>
					<pathelement path="${build.classpath}" />
					<pathelement path="${HYBRIS_BOOTSTRAP_BIN_DIR}/models.jar" />
					<fileset dir="${bundled.tomcat.home}">
						<include name="lib/*.jar" />
					</fileset>
					<pathelement path="${HYBRIS_TEMP_DIR}/log4j" />
                    <pathelement path="${ext.@{extname}.classpath}" />
					<!-- for the log4j stuff -->
				</classpath>
			</groovyc>
		</sequential>
	</macrodef>

    <macrodef name="groovynature_compile_core">
        <attribute name="extname"/>
        <sequential>
            <if>
                <isset property="ext.@{extname}.coremodule.available"/>
                <then>
                    <if>
                        <istrue value="${ext.@{extname}.extension.coremodule.sourceavailable}"/>
                        <then>
	                        <groovy_compile srcdir="${ext.@{extname}.path}/groovysrc"
	                                        destdir="${ext.@{extname}.path}/classes"
	                                        extname="@{extname}"/>
	                        <groovy_compile srcdir="${ext.@{extname}.path}/groovytestsrc"
	                                        destdir="${ext.@{extname}.path}/classes"
	                                        extname="@{extname}"/>
                        </then>
                    </if>
                </then>
            </if>
        </sequential>
    </macrodef>

    <macrodef name="groovynature_compile_web">
        <attribute name="extname"/>
        <sequential>
            <if>
                <isset property="ext.@{extname}.webmodule.available"/>
                <then>
                    <if>
                        <istrue value="${ext.@{extname}.extension.webmodule.sourceavailable}"/>
                        <then>
	                        <groovy_compile srcdir="${ext.@{extname}.path}/web/groovysrc"
	                                       destdir="${ext.@{extname}.path}/web/webroot/WEB-INF/classes"
	                                       extname="@{extname}"/>
	                        <groovy_compile srcdir="${ext.@{extname}.path}/web/groovytestsrc"
	                                       destdir="${ext.@{extname}.path}/web/webroot/WEB-INF/classes"
	                                       extname="@{extname}"/>
                        </then>
                    </if>
                </then>
            </if>
        </sequential>
    </macrodef>

</project>
