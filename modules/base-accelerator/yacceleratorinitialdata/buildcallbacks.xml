<?xml version="1.0"?>
<!--
 Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
-->
<!--
 All hybris buildcallbacks.xml macrodefinitions:
 
 Build/Documentation

	 before/after ant macro "clean"
		 <macrodef name="yacceleratorinitialdata_before_clean"/>
		 <macrodef name="yacceleratorinitialdata_after_clean"/>

	 before/after ant macro "build"
		 <macrodef name="yacceleratorinitialdata_before_build"/>
		 <macrodef name="yacceleratorinitialdata_after_build"/>

	 before/after ant macro "compile_core" - the core module of the extension
		 <macrodef name="yacceleratorinitialdata_before_compile_core">
		 <macrodef name="yacceleratorinitialdata_after_compile_core">

	 before/after ant macro "compile_web" - the web module of the extension
		 <macrodef name="yacceleratorinitialdata_before_compile_web" />
		 <macrodef name="yacceleratorinitialdata_after_compile_web" />

 Preparing extension

	 will be called in the beginning of the ant call and only once (also when using multiple 
	 ant targets e.g. ant build yunittest)
		 <macrodef name="yacceleratorinitialdata_only_once_prepare"/>

 Creating ear module/production

	before/after ant macro "ear"
		<macrodef name="yacceleratorinitialdata_before_ear"/>
		<macrodef name="yacceleratorinitialdata_after_ear"/>

	before/after ant macro "production" - for hybris server only
		<macrodef name="yacceleratorinitialdata_before_production" />
		<macrodef name="yacceleratorinitialdata_after_production" />

 JUnit Test

	before/after ant macro "yunitinit" 
		<macrodef name="yacceleratorinitialdata_before_yunitinit" />
		<macrodef name="yacceleratorinitialdata_after_yunitinit" />

	before/after ant macro "yunit"
		<macrodef name="yacceleratorinitialdata_before_yunit" />
		<macrodef name="yacceleratorinitialdata_after_yunit" /> 

 Distribution package

	before/after ant macro "dist" - internal target; only for use when platform is available in source code
		<macrodef name="yacceleratorinitialdata_after_dist"/>
		<macrodef name="yacceleratorinitialdata_before_dist"/>

	before/after ant macro "dist_copy" - internal target; only for use when platform is available in source code
		<macrodef name="yacceleratorinitialdata_before_dist_copy"/>
		<macrodef name="yacceleratorinitialdata_after_dist_copy"/>

-->

<project name="yacceleratorinitialdata_buildcallbacks">

	<import file="${ext.yacceleratorinitialdata.path}/resources/yacceleratorinitialdata/ant/ant-bind-impex-template.xml"/>

	<!-- 
		Called whenever 'ant ear' is used. this callback can be used to modify the content of the ear file

		${ear.path}: 			path to ear
	-->
	<macrodef name="yacceleratorinitialdata_before_ear">
		<sequential>

			<!-- you can do anything before the EAR file is being packed -->

		</sequential>
	</macrodef>

	<macrodef name="yacceleratorinitialdata_clean_classpath_file">
		<sequential>
			<copy file="${ext.yacceleratorinitialdata.path}/.classpath" tofile="${ext.yacceleratorinitialdata.path}/.classpath.edit"
				  overwrite="true"
				  failonerror="true">
				<filterchain>
					<linecontainsregexp negate="true">
						<regexp pattern="^(\t\t\t\t|)$" />  <!-- added by script -->
					</linecontainsregexp>
				</filterchain>
			</copy>
			<move file="${ext.yacceleratorinitialdata.path}/.classpath.edit" tofile="${ext.yacceleratorinitialdata.path}/.classpath"
				  overwrite="true"
				  failonerror="true" />
		</sequential>
	</macrodef>

	<macrodef name="yacceleratorinitialdata_after_clean">
		<sequential>
			<echo level="info" message="Generating .classpath file for yacceleratorinitialdata" />
			<create_extension_classpath_file extname="yacceleratorinitialdata" />
			<yacceleratorinitialdata_clean_classpath_file />
		</sequential>
	</macrodef>

	<!-- exclude impex files from localization -->
	<patternset id="yacceleratorinitialdata.localization.pattern">
		<patternset refid="localization.defaultpattern" />
		<exclude name="**/*.impex"/>
	</patternset>

</project>
