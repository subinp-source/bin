/*
 * Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
 */
package de.hybris.platform.odata2services.odata.integrationkey.impl

import de.hybris.bootstrap.annotations.UnitTest
import de.hybris.platform.integrationservices.integrationkey.IntegrationKeyValueGenerator
import de.hybris.platform.integrationservices.model.TypeDescriptor
import de.hybris.platform.odata2services.odata.integrationkey.ODataEntryToMapConverter
import org.apache.olingo.odata2.api.ep.entry.ODataEntry
import org.junit.Test
import spock.lang.Specification
import spock.lang.Unroll

@UnitTest
class DelegatingODataEntryToIntegrationKeyValueGeneratorUnitTest extends Specification {
    def mapToIntegrationKeyGenerator = Stub IntegrationKeyValueGenerator
    def oDataEntryToMapConverter = Stub ODataEntryToMapConverter
    def typeDescriptor = Stub(TypeDescriptor)
    def odataEntry = Stub(ODataEntry)

    def integrationKeyValueGenerator = new DelegatingODataEntryToIntegrationKeyValueGenerator(
            mapToIntegrationKeyGenerator: mapToIntegrationKeyGenerator,
            oDataEntryToMapConverter: oDataEntryToMapConverter
    )

    @Test
    @Unroll
    def "key generated by the mapToIntegrationKeyGenerator is returned when oDataEntry generates map #mapValue"() {
        given:
        def integrationKey = "keyReturnedFromMapKeyGenerator"
        oDataEntryToMapConverter.convert(typeDescriptor, odataEntry) >> mapValue
        mapToIntegrationKeyGenerator.generate(typeDescriptor, mapValue) >> integrationKey

        expect:
        integrationKeyValueGenerator.generate(typeDescriptor, odataEntry) == integrationKey
        
        where:
        mapValue << [Stub(Map), null]
    }
}
