# -----------------------------------------------------------------------
# [y] hybris Platform
#
# Copyright (c) 2018 SAP SE or an SAP affiliate company.  All rights reserved.
#
# This software is the confidential and proprietary information of SAP
# ("Confidential Information"). You shall not disclose such Confidential
# Information and shall use it only in accordance with the terms of the
# license agreement you entered into with SAP.
# -----------------------------------------------------------------------

droolsruleengineservices.application-context=droolsruleengineservices-spring.xml

# validates that a @ruleCode meta-data key is present in the DroolsRule.drl and that it matches with the DroolsRule.code
# this is required to keep hybris DroolsRule instances in sync with the drools runtime rules
droolsruleengineservices.validate.droolsrule.rulecode=true

# validates that the DroolsRule.ruleName can be found within the DroolsRule.drl 
# in the form of e.g. 'rule "The rule name"' (double-quotes are required around the rule name declaration in the drl)
droolsruleengineservices.validate.droolsrule.rulename=true

# validates that a @moduleName meta-data key is present in the DroolsRule.drl and that it matches with the AbstractModule.name
# this is required to keep hybris DroolsRule instances in sync with the drools runtime rules
droolsruleengineservices.validate.droolsrule.modulename=true
 
# validates that the DroolsRule.rulePackage can be found within the DroolsRule.drl 
# in the form of e.g. 'package de.hybris.platform.myrules'
droolsruleengineservices.validate.droolsrule.rulepackage=true

# The date format for drools rule engine. It gets set as a System property "drools.dateformat" so drools can use it.
drools.dateformat=dd-MMM-yyyy HH:mm:ss

# performance optimization (if set to true, default value is true) 
# changing the property requires to recompile promotion rules.
# If set to true each container of a promotion will be exclusive, 
# so one cart entry cannot be matched to multiple containers.
# Example: if two containers A and B define product X as qualifying product
#          (ie. overlapping containers which should be avoided!)
#          and one action using A=1 and B=1 to give a discount
#          and the cart contains one entry with quantity 2 of product X
#          the promotion would not fire because the 2 required quantity
#          are in the same cart entry.
# When this property is enabled the generated drools code will contain statements
# similar to this: $rao_v5 := OrderEntryRAO(this != $rao_v4, productCode == "X")
# Notice the part:  this != $rao_v4  <-- this part will be removed if the property is disabled       
droolsruleengineservices.generate.unique.fact.matching.condition=false


# log4j settings for drools compiler output
log4j2.logger.drools-compiler.name = de.hybris.platform.droolsruleengineservices.compiler.impl
log4j2.logger.drools-compiler.level = INFO
log4j2.logger.drools-compiler.appenderRef.stdout.ref = STDOUT
log4j2.logger.rule-maintenance.additivity = false