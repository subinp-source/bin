package de.hybris.platform.ruleengineservices.test

import java.math.*;
import de.hybris.platform.ruleengineservices.rao.*;
import de.hybris.platform.ruleengineservices.rule.evaluation.*;
import java.util.Map;
import de.hybris.platform.droolsruleengineservices.compiler.impl.DefaultDroolsRuleActionContext;
import de.hybris.platform.ruleengineservices.rule.evaluation.impl.RuleAndRuleGroupExecutionTracker;

global de.hybris.platform.ruleengineservices.rule.evaluation.RuleExecutableAction ruleOrderFixedDiscountAction;

salience 10;
//cart with total greater than $100 gets $10 discount
rule "orderlevel-discount-10USD"
@ruleCode("orderlevel-discount-10USD.drl")
@moduleName("rules-module-junit")
dialect "mvel"

    when
    	$executionTracker := RuleAndRuleGroupExecutionTracker()
    	$cart:CartRAO(total > 95, currencyIsoCode == "USD")
    	$result:RuleEngineResultRAO()
    	// check if rule discount is not applied already (it gets inserted during the consequence's service call)
    	not $discount:DiscountRAO( firedRuleCode == "orderlevel-discount-10USD.drl" )
    	
    then
    	Map variables = [
      		"de.hybris.platform.ruleengineservices.rao.CartRAO" : $cart,
      		"de.hybris.platform.ruleengineservices.rao.RuleEngineResultRAO" : $result
   		];
		ruleOrderFixedDiscountAction.executeAction(new DefaultDroolsRuleActionContext(variables, kcontext), ["value":["USD":new BigDecimal(10)]]);
		$executionTracker.trackRuleExecution(kcontext);
end
